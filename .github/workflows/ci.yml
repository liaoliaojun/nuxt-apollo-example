# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    # paths-ignore:
    # - '.github/**'
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/blog-webapp:latest

      - name: Deploy 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD}}
          port: ${{ secrets.SSH_PORT }}
          script: |
            OLD_DOCKER_CONTAINER_ID=`docker ps -a |grep liaoliaojun/blog-webapp:latest | awk '{ print $1 }'`
            OLD_DOCKER_IMAGE_ID=`docker images liaoliaojun/blog-webapp:latest -q`

            if [ $OLD_DOCKER_CONTAINER_ID ]; then
              docker stop $OLD_DOCKER_CONTAINER_ID
              docker rm -f $OLD_DOCKER_CONTAINER_ID
            fi

            if [ $OLD_DOCKER_IMAGE_ID ]; then
              docker rmi -f $OLD_DOCKER_IMAGE_ID
            fi

            sudo echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
            sudo docker pull liaoliaojun/blog-webapp:latest
            sudo docker run -d -p 3001:3001 liaoliaojun/blog-webapp:latest
            
